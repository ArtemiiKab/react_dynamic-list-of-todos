{"version":3,"sources":["api/api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["getUser","userId","fetch","then","response","json","TodoList","todos","selectUser","updateCompleted","filterTodos","handleSelect","className","type","placeholder","onChange","event","target","value","map","todo","key","id","checked","completed","title","onClick","CurrentUser","user","clearUser","name","email","phone","App","state","selectedUserId","todosCopy","select","setState","componentDidUpdate","data","prevState","Number","filter","el","includes","result","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8554b92.chunk.js","sourcesContent":["const API_TODO_URL = 'https://mate-api.herokuapp.com/todos';\n\nexport const getTodos = () => (\n  fetch(API_TODO_URL)\n    .then(response => response.json())\n);\n\nexport const getUser = userId => (\n  fetch(`https://mate-api.herokuapp.com/users/${userId}`)\n    .then(response => response.json())\n);\n","import React from 'react';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, selectUser, updateCompleted, filterTodos, handleSelect }) => {\n  return (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    <input\n      type=\"text\"\n      placeholder=\"filter todos\"\n      onChange={event => filterTodos(event.target)}\n    />\n    <select\n      onChange={event => handleSelect(event.target.value)}\n    >\n      <option>\n        All\n      </option>\n      <option>\n        Active\n      </option>\n      <option>\n        Completed\n      </option>\n    </select>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li className=\"TodoList__item TodoList__item--unchecked\" key={todo.id}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={event => updateCompleted(event.target)}\n                value={todo.id}\n              />\n              <p>{todo.title}</p>\n            </label>\n            <button\n              className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n              type=\"button\"\n              onClick={() => selectUser(todo)}\n            >\n              User&nbsp;#{todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n)};\n","import React from 'react';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ user, clearUser }) => (\n\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\"><span>Selected user: {user.id}</span></h2>\n\n    <h3 className=\"CurrentUser__name\">{user.name}</h3>\n    <p className=\"CurrentUser__email\">{user.email}</p>\n    <p className=\"CurrentUser__phone\">{user.phone}</p>\n    <button\n      type=\"button\"\n      onClick={() => clearUser()}\n    >\n      Clear\n    </button>\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getTodos, getUser } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    user: [],\n    todosCopy: [],\n    select: 'All',\n  };\n\n  selectUser = (user) => {\n    this.setState({\n      selectedUserId: user.userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      user: [],\n      selectedUserId: 0,\n    })\n  }\n\n  componentDidMount() {\n    getTodos()\n      .then((result) => {\n        this.setState({\n          todos: result.data,\n          todosCopy: result.data,\n        })\n      })\n  }\n\n  componentDidUpdate = () => {\n    if (this.state.selectedUserId !== 0\n      && this.state.selectedUserId !== this.state.user.id) {\n      getUser(this.state.selectedUserId)\n        .then((user) => {\n          this.setState({ user: user.data });\n        });\n    }\n  }\n\n  updateCompleted = target => {\n    this.setState(prevState => ({\n      todosCopy: prevState.todosCopy.map(todo => {\n        if (todo.id !== Number(target.value)) {\n          return {...todo}\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        }\n      })\n    }))\n  }\n\n  filterTodos = target => {\n    this.setState(prevState => ({\n      todosCopy: prevState.todos.filter(el => (\n        el.title\n          ? el.title.includes(target.value)\n          : '' \n      )),\n    }));\n  }\n\n  handleSelect = target => {\n    if (target === 'All') {\n      this.setState(prevState =>({todosCopy: prevState.todos}))\n    } else if (target === 'Active') {\n      this.setState(prevState => ({\n        todosCopy: prevState.todos.filter(el => (\n          !el.completed\n        ))\n      }))\n    } else if (target === 'Completed') {\n      this.setState(prevState => ({\n        todosCopy: prevState.todos.filter(el => el.completed)\n      }))\n    }\n  }\n\n  render() {\n    const { todosCopy, selectedUserId, user, } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todosCopy}\n            selectUser={this.selectUser}\n            updateCompleted={this.updateCompleted}\n            filterTodos={this.filterTodos}\n            handleSelect={this.handleSelect}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser user={user} clearUser={this.clearUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}